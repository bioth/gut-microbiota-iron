selected_comparisons = list(c("Wt:Vehicle", "Wt:Putrescine"),
c("IL-22ra1-/-:Vehicle", "IL-22ra1-/-:Putrescine"),
c("Wt:Vehicle","IL-22ra1-/-:Vehicle"),
c("Wt:Putrescine","IL-22ra1-/-:Putrescine")),
path = "~/Documents/CHUM_git/figures/samuel/phyla_rel_ab", include_graph = TRUE)
source("~/Documents/CHUM_git/gut-microbiota-iron/pipeline_linux/microbiota_analysis/taxa_distrib_graphs_and_stats.R")
taxGlomResAndStats(ps_samuel, taxrank = "Phylum", exp_group = "gg_group",
selected_comparisons = list(c("Wt:Vehicle", "Wt:Putrescine"),
c("IL-22ra1-/-:Vehicle", "IL-22ra1-/-:Putrescine"),
c("Wt:Vehicle","IL-22ra1-/-:Vehicle"),
c("Wt:Putrescine","IL-22ra1-/-:Putrescine")),
path = "~/Documents/CHUM_git/figures/samuel/phyla_rel_ab", include_graph = TRUE)
source("~/Documents/CHUM_git/gut-microbiota-iron/pipeline_linux/microbiota_analysis/taxa_distrib_graphs_and_stats.R")
taxGlomResAndStats(ps_samuel, taxrank = "Phylum", exp_group = "gg_group",
selected_comparisons = list(c("Wt:Vehicle", "Wt:Putrescine"),
c("IL-22ra1-/-:Vehicle", "IL-22ra1-/-:Putrescine"),
c("Wt:Vehicle","IL-22ra1-/-:Vehicle"),
c("Wt:Putrescine","IL-22ra1-/-:Putrescine")),
path = "~/Documents/CHUM_git/figures/samuel/phyla_rel_ab", include_graph = TRUE)
source("~/Documents/CHUM_git/gut-microbiota-iron/pipeline_linux/microbiota_analysis/taxa_distrib_graphs_and_stats.R")
taxGlomResAndStats(ps_samuel, taxrank = "Phylum", exp_group = "gg_group",
selected_comparisons = list(c("Wt:Vehicle", "Wt:Putrescine"),
c("IL-22ra1-/-:Vehicle", "IL-22ra1-/-:Putrescine"),
c("Wt:Vehicle","IL-22ra1-/-:Vehicle"),
c("Wt:Putrescine","IL-22ra1-/-:Putrescine")),
path = "~/Documents/CHUM_git/figures/samuel/phyla_rel_ab", include_graph = TRUE)
source("~/Documents/CHUM_git/gut-microbiota-iron/pipeline_linux/microbiota_analysis/taxa_distrib_graphs_and_stats.R")
taxGlomResAndStats(ps_samuel, taxrank = "Phylum", exp_group = "gg_group",
selected_comparisons = list(c("Wt:Vehicle", "Wt:Putrescine"),
c("IL-22ra1-/-:Vehicle", "IL-22ra1-/-:Putrescine"),
c("Wt:Vehicle","IL-22ra1-/-:Vehicle"),
c("Wt:Putrescine","IL-22ra1-/-:Putrescine")),
path = "~/Documents/CHUM_git/figures/samuel/phyla_rel_ab", include_graph = TRUE)
source("~/Documents/CHUM_git/gut-microbiota-iron/pipeline_linux/microbiota_analysis/taxa_distrib_graphs_and_stats.R")
taxGlomResAndStats(ps_samuel, taxrank = "Phylum", exp_group = "gg_group",
selected_comparisons = list(c("Wt:Vehicle", "Wt:Putrescine"),
c("IL-22ra1-/-:Vehicle", "IL-22ra1-/-:Putrescine"),
c("Wt:Vehicle","IL-22ra1-/-:Vehicle"),
c("Wt:Putrescine","IL-22ra1-/-:Putrescine")),
path = "~/Documents/CHUM_git/figures/samuel/phyla_rel_ab", include_graph = TRUE)
source("~/Documents/CHUM_git/gut-microbiota-iron/pipeline_linux/microbiota_analysis/taxa_distrib_graphs_and_stats.R")
taxGlomResAndStats(ps_samuel, taxrank = "Phylum", exp_group = "gg_group",
selected_comparisons = list(c("Wt:Vehicle", "Wt:Putrescine"),
c("IL-22ra1-/-:Vehicle", "IL-22ra1-/-:Putrescine"),
c("Wt:Vehicle","IL-22ra1-/-:Vehicle"),
c("Wt:Putrescine","IL-22ra1-/-:Putrescine")),
path = "~/Documents/CHUM_git/figures/samuel/phyla_rel_ab", include_graph = TRUE)
source("~/Documents/CHUM_git/gut-microbiota-iron/pipeline_linux/microbiota_analysis/taxa_distrib_graphs_and_stats.R")
source("~/Documents/CHUM_git/gut-microbiota-iron/pipeline_linux/microbiota_analysis/taxa_distrib_graphs_and_stats.R")
taxGlomResAndStats(ps_samuel, taxrank = "Phylum", exp_group = "gg_group",
selected_comparisons = list(c("Wt:Vehicle", "Wt:Putrescine"),
c("IL-22ra1-/-:Vehicle", "IL-22ra1-/-:Putrescine"),
c("Wt:Vehicle","IL-22ra1-/-:Vehicle"),
c("Wt:Putrescine","IL-22ra1-/-:Putrescine")),
path = "~/Documents/CHUM_git/figures/samuel/phyla_rel_ab", include_graph = TRUE)
source("~/Documents/CHUM_git/gut-microbiota-iron/pipeline_linux/microbiota_analysis/taxa_distrib_graphs_and_stats.R")
taxGlomResAndStats(ps_samuel, taxrank = "Phylum", exp_group = "gg_group",
selected_comparisons = list(c("Wt:Vehicle", "Wt:Putrescine"),
c("IL-22ra1-/-:Vehicle", "IL-22ra1-/-:Putrescine"),
c("Wt:Vehicle","IL-22ra1-/-:Vehicle"),
c("Wt:Putrescine","IL-22ra1-/-:Putrescine")),
path = "~/Documents/CHUM_git/figures/samuel/phyla_rel_ab", include_graph = TRUE)
source("~/Documents/CHUM_git/gut-microbiota-iron/pipeline_linux/microbiota_analysis/taxa_distrib_graphs_and_stats.R")
taxGlomResAndStats(ps_samuel, taxrank = "Phylum", exp_group = "gg_group",
selected_comparisons = list(c("Wt:Vehicle", "Wt:Putrescine"),
c("IL-22ra1-/-:Vehicle", "IL-22ra1-/-:Putrescine"),
c("Wt:Vehicle","IL-22ra1-/-:Vehicle"),
c("Wt:Putrescine","IL-22ra1-/-:Putrescine")),
path = "~/Documents/CHUM_git/figures/samuel/phyla_rel_ab", include_graph = TRUE)
source("~/Documents/CHUM_git/gut-microbiota-iron/pipeline_linux/microbiota_analysis/taxa_distrib_graphs_and_stats.R")
taxGlomResAndStats(ps_samuel, taxrank = "Phylum", exp_group = "gg_group",
selected_comparisons = list(c("Wt:Vehicle", "Wt:Putrescine"),
c("IL-22ra1-/-:Vehicle", "IL-22ra1-/-:Putrescine"),
c("Wt:Vehicle","IL-22ra1-/-:Vehicle"),
c("Wt:Putrescine","IL-22ra1-/-:Putrescine")),
path = "~/Documents/CHUM_git/figures/samuel/phyla_rel_ab", include_graph = TRUE)
source("~/Documents/CHUM_git/gut-microbiota-iron/pipeline_linux/microbiota_analysis/taxa_distrib_graphs_and_stats.R")
# Agglomerates asvs at phylum level and returns stats and results relative_abundance (Claire)
taxGlomResAndStats(ps_claire, taxrank = "Phylum", exp_group = "gg_group",
selected_comparisons = list(c( "50 ppm / 3w",  "500 ppm / 3w"),
c( "50 ppm / 8w",  "500 ppm / 8w"),
c( "50 ppm / 10w",  "500 ppm / 10w"),
c("50 ppm / 14w", "500 ppm / 14w")),
path = "~/Documents/CHUM_git/figures/claire/phyla_rel_ab", include_graph = FALSE)
sample_data(ps_claire)
sample_data(ps_claire)$gg_group
#for Claire's data, put gg_group as factor and define order
sample_data(ps_claire)$gg_group <- factor(sample_data(ps_claire)$gg_group, levels = c("3:50", "8:50", "10:50", "14:50", "3:500", "8:500", "10:500", "14:500"))
# Enables to rename factor levels (this is more convenient to change the names for each subgraph
# in the facet_wrap.)
library(forcats)
sample_data(ps_claire)$gg_group <- fct_recode(sample_data(ps_claire)$gg_group,
"50 ppm / 3w"="3:50",
"50 ppm / 8w"="8:50",
"50 ppm / 10w"="10:50",
"50 ppm / 14w"="14:50",
"500 ppm / 3w"="3:500",
"500 ppm / 8w"="8:500",
"500 ppm / 10w"="10:500",
"500 ppm / 14w"="14:500")
# Agglomerates asvs at phylum level and returns stats and results relative_abundance (Claire)
taxGlomResAndStats(ps_claire, taxrank = "Phylum", exp_group = "gg_group",
selected_comparisons = list(c( "50 ppm / 3w",  "500 ppm / 3w"),
c( "50 ppm / 8w",  "500 ppm / 8w"),
c( "50 ppm / 10w",  "500 ppm / 10w"),
c("50 ppm / 14w", "500 ppm / 14w")),
path = "~/Documents/CHUM_git/figures/claire/phyla_rel_ab", include_graph = FALSE)
source("~/Documents/CHUM_git/gut-microbiota-iron/pipeline_linux/microbiota_analysis/taxa_distrib_graphs_and_stats.R")
# Agglomerates asvs at phylum level and returns stats and results relative_abundance (Claire)
taxGlomResAndStats(ps_claire, taxrank = "Phylum", exp_group = "gg_group",
selected_comparisons = list(c( "50 ppm / 3w",  "500 ppm / 3w"),
c( "50 ppm / 8w",  "500 ppm / 8w"),
c( "50 ppm / 10w",  "500 ppm / 10w"),
c("50 ppm / 14w", "500 ppm / 14w")),
path = "~/Documents/CHUM_git/figures/claire/phyla_rel_ab", include_graph = FALSE)
source("~/Documents/CHUM_git/gut-microbiota-iron/pipeline_linux/microbiota_analysis/taxa_distrib_graphs_and_stats.R")
# Agglomerates asvs at phylum level and returns stats and results relative_abundance (Claire)
taxGlomResAndStats(ps_claire, taxrank = "Phylum", exp_group = "gg_group",
selected_comparisons = list(c( "50 ppm / 3w",  "500 ppm / 3w"),
c( "50 ppm / 8w",  "500 ppm / 8w"),
c( "50 ppm / 10w",  "500 ppm / 10w"),
c("50 ppm / 14w", "500 ppm / 14w")),
path = "~/Documents/CHUM_git/figures/claire/phyla_rel_ab", include_graph = FALSE)
source("~/Documents/CHUM_git/gut-microbiota-iron/pipeline_linux/microbiota_analysis/taxa_distrib_graphs_and_stats.R")
# Agglomerates asvs at phylum level and returns stats and results relative_abundance (Claire)
taxGlomResAndStats(ps_claire, taxrank = "Phylum", exp_group = "gg_group",
selected_comparisons = list(c( "50 ppm / 3w",  "500 ppm / 3w"),
c( "50 ppm / 8w",  "500 ppm / 8w"),
c( "50 ppm / 10w",  "500 ppm / 10w"),
c("50 ppm / 14w", "500 ppm / 14w")),
path = "~/Documents/CHUM_git/figures/claire/phyla_rel_ab", include_graph = FALSE)
source("~/Documents/CHUM_git/gut-microbiota-iron/pipeline_linux/microbiota_analysis/taxa_distrib_graphs_and_stats.R")
# Agglomerates asvs at phylum level and returns stats and results relative_abundance (Claire)
taxGlomResAndStats(ps_claire, taxrank = "Phylum", exp_group = "gg_group",
selected_comparisons = list(c( "50 ppm / 3w",  "500 ppm / 3w"),
c( "50 ppm / 8w",  "500 ppm / 8w"),
c( "50 ppm / 10w",  "500 ppm / 10w"),
c("50 ppm / 14w", "500 ppm / 14w")),
path = "~/Documents/CHUM_git/figures/claire/phyla_rel_ab", include_graph = FALSE)
ps_claire <- subset_samples(ps, student == "Claire")
sum(taxa_sums(ps_claire))
length(taxa_sums(ps_claire))
ps_claire <- prune_taxa(taxa_sums(ps_claire) > 0, ps_claire) #Actual ASVs from Claire's data
sum(taxa_sums(ps_claire))
length(taxa_sums(ps_claire))
ps_claire <- prune_taxa(taxa_sums(ps_claire) > 10, ps_claire)
sum(taxa_sums(ps_claire))
length(taxa_sums(ps_claire))
ps_claire <- prune_taxa(colSums(otu_table(ps_claire) > 0) >= (0.05 * nsamples(ps_claire)), ps_claire)
sum(taxa_sums(ps_claire))
length(taxa_sums(ps_claire))
#for Claire's data, put gg_group as factor and define order
sample_data(ps_claire)$gg_group <- factor(sample_data(ps_claire)$gg_group, levels = c("3:50", "8:50", "10:50", "14:50", "3:500", "8:500", "10:500", "14:500"))
# sample_data(ps_claire)$gg_group <- fct_recode(sample_data(ps_claire)$gg_group,
#                                               "50 ppm / 3w"="3:50",
#                                               "50 ppm / 8w"="8:50",
#                                               "50 ppm / 10w"="10:50",
#                                               "50 ppm / 14w"="14:50",
#                                               "500 ppm / 3w"="3:500",
#                                               "500 ppm / 8w"="8:500",
#                                               "500 ppm / 10w"="10:500",
#                                               "500 ppm / 14w"="14:500")
# Agglomerates asvs at phylum level and returns stats and results relative_abundance (Claire)
taxGlomResAndStats(ps_claire, taxrank = "Phylum", exp_group = "gg_group",
selected_comparisons = list(c( "3:50",  "3:500"),
c( "8:50",  "8:500"),
c( "10:50",  "10:500"),
c( "14:50",  "14:500")),
path = "~/Documents/CHUM_git/figures/claire/phyla_rel_ab", include_graph = FALSE)
source("~/Documents/CHUM_git/gut-microbiota-iron/pipeline_linux/microbiota_analysis/taxa_distrib_graphs_and_stats.R")
# sample_data(ps_claire)$gg_group <- fct_recode(sample_data(ps_claire)$gg_group,
#                                               "50 ppm / 3w"="3:50",
#                                               "50 ppm / 8w"="8:50",
#                                               "50 ppm / 10w"="10:50",
#                                               "50 ppm / 14w"="14:50",
#                                               "500 ppm / 3w"="3:500",
#                                               "500 ppm / 8w"="8:500",
#                                               "500 ppm / 10w"="10:500",
#                                               "500 ppm / 14w"="14:500")
# Agglomerates asvs at phylum level and returns stats and results relative_abundance (Claire)
taxGlomResAndStats(ps_claire, taxrank = "Phylum", exp_group = "gg_group",
selected_comparisons = list(c( "3:50",  "3:500"),
c( "8:50",  "8:500"),
c( "10:50",  "10:500"),
c( "14:50",  "14:500")),
path = "~/Documents/CHUM_git/figures/claire/phyla_rel_ab", include_graph = FALSE)
source("~/Documents/CHUM_git/gut-microbiota-iron/pipeline_linux/microbiota_analysis/taxa_distrib_graphs_and_stats.R")
# sample_data(ps_claire)$gg_group <- fct_recode(sample_data(ps_claire)$gg_group,
#                                               "50 ppm / 3w"="3:50",
#                                               "50 ppm / 8w"="8:50",
#                                               "50 ppm / 10w"="10:50",
#                                               "50 ppm / 14w"="14:50",
#                                               "500 ppm / 3w"="3:500",
#                                               "500 ppm / 8w"="8:500",
#                                               "500 ppm / 10w"="10:500",
#                                               "500 ppm / 14w"="14:500")
# Agglomerates asvs at phylum level and returns stats and results relative_abundance (Claire)
taxGlomResAndStats(ps_claire, taxrank = "Phylum", exp_group = "gg_group",
selected_comparisons = list(c( "3:50",  "3:500"),
c( "8:50",  "8:500"),
c( "10:50",  "10:500"),
c( "14:50",  "14:500")),
path = "~/Documents/CHUM_git/figures/claire/phyla_rel_ab", include_graph = FALSE)
source("~/Documents/CHUM_git/gut-microbiota-iron/pipeline_linux/microbiota_analysis/taxa_distrib_graphs_and_stats.R")
# Agglomerates asvs at phylum level and returns stats and results relative_abundance (Samuel)
taxGlomResAndStats(ps_samuel, taxrank = "Phylum", exp_group = "gg_group",
selected_comparisons = list(c("Wt:Vehicle", "Wt:Putrescine"),
c("IL-22ra1-/-:Vehicle", "IL-22ra1-/-:Putrescine"),
c("Wt:Vehicle","IL-22ra1-/-:Vehicle"),
c("Wt:Putrescine","IL-22ra1-/-:Putrescine")),
path = "~/Documents/CHUM_git/figures/samuel/phyla_rel_ab", include_graph = FALSE)
library(readxl)
library(ggplot2)
df <- read_excel("Downloads/Microbiota_18.chimeraMetrics.xlsx")
View(df)
meta <- read.csv("Documents/CHUM_git/Microbiota_18/metadata/metadata.csv")
meta <- read.csv("Documents/CHUM_git/Microbiota_18/metadata/metadata.csv", sep = ";")
View(meta)
meta <- meta[-46,]
meta$id <- substring(meta$id, first = 1, last = 5)
length(df$Sample)
df$Sample
df$timepoint <- substring(df$Sample, first = 7, last = length(df$Sample))
df$id <- substring(df$Sample, first = 1, last = 5)
merged_df <- merge(df, meta, by = "id")
View(merged_df)
unique(merged_df$timepoint)
merged_df$gg_group <- pastemerged_df$diet, merged_df$treatment, sep = ":")
merged_df$gg_group <- paste(merged_df$diet, merged_df$treatment, sep = ":")
merged_df$gg_group <- factor(merged_df$gg_group, levels = c("50:water","500:water","50:dss","500:dss"))
library(ggplot2)
ggplot(data = merged_df, mapping = aes(x = timepoint, y = `Overall Retention %`, colour = gg_group))+
geom_point(position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.75), alpha = 0.5) +
stat_summary(fun="mean", geom = "segment", mapping=aes(xend=..x..-0.25, yend=..y..), color = "black", size = 1)+ #adding horizontal bars representing means
stat_summary(fun="mean", geom = "segment", mapping=aes(xend=..x..+0.25, yend=..y..), color = "black", size = 1)
ggplot(data = merged_df, mapping = aes(x = timepoint, y = `Overall Retention %`, colour = gg_group))+
geom_point(position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.75), alpha = 0.5) +
geom_bar(position = position_dodge())
ggplot(data = merged_df, mapping = aes(x = timepoint, y = `Overall Retention %`, colour = gg_group))+
geom_point(position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.75), alpha = 0.5) +
geom_bar(mapping = aes(x = gg_group, colour = gg_group), position = position_dodge())
ggplot(data = merged_df, mapping = aes(x = timepoint, y = `Overall Retention %`, colour = gg_group)) +
geom_point(position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.75), alpha = 0.5) +
geom_bar(aes(fill = gg_group), position = position_dodge(width = 0.75), stat = "identity")
ggplot(data = merged_df, mapping = aes(x = timepoint, y = `Overall Retention %`, colour = gg_group)) +
geom_point(position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.75), alpha = 0.5) +
geom_bar(aes(fill = gg_group), position = position_dodge(width = 0.75), stat = "identity", alpha = 0.5)
ggplot(data = merged_df, aes(x = timepoint, y = `Overall Retention %`, fill = gg_group)) +
stat_summary(fun = mean, geom = "bar", position = position_dodge(width = 0.75)) +
geom_point(aes(colour = gg_group), position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.75), alpha = 0.5)
ggplot(data = merged_df, aes(x = timepoint, y = `Overall Retention %`, fill = gg_group)) +
stat_summary(fun = mean, geom = "bar", position = position_dodge(width = 0.75), alpha = 0.5) +
geom_point(aes(colour = gg_group), position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.75), alpha = 0.5)
ggplot(data = merged_df, aes(x = timepoint, y = `Overall Retention %`, fill = gg_group)) +
stat_summary(fun = mean, geom = "bar", position = position_dodge(width = 1), alpha = 0.5) +
geom_point(aes(colour = gg_group), position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.75), alpha = 0.5)
ggplot(data = merged_df, aes(x = timepoint, y = `Overall Retention %`, fill = gg_group)) +
stat_summary(fun = mean, geom = "bar", position = position_dodge(width = 0.8), alpha = 0.5) +
geom_point(aes(colour = gg_group), position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.75), alpha = 0.5)
ggplot(data = merged_df, aes(x = timepoint, y = `Overall Retention %`, fill = gg_group)) +
stat_summary(fun = mean, geom = "bar", position = position_dodge(width = 0.8), alpha = 0.5) +
geom_point(aes(colour = gg_group), position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.8), alpha = 0.5)
ggplot(data = merged_df, aes(x = timepoint, y = `Overall Retention %`, fill = gg_group)) +
stat_summary(fun = mean, geom = "bar", position = position_dodge(width = 0.8), alpha = 0.5) +
geom_point(aes(colour = gg_group), position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.8), alpha = 0.5)+
scale_color_manual(values = c("blue", "red", "darkblue", "darkred"))
ggplot(data = merged_df, aes(x = timepoint, y = `Overall Retention %`, fill = gg_group)) +
stat_summary(fun = mean, geom = "bar", position = position_dodge(width = 0.8), alpha = 0.5) +
geom_point(aes(colour = gg_group), position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.8), alpha = 0.5)+
scale_color_manual(values = c("blue", "red", "darkblue", "darkred"))+
scale_fill_manual(values = c("blue", "red", "darkblue", "darkred"))
ggplot(data = merged_df, aes(x = timepoint, y = `Overall Retention %`, fill = gg_group)) +
stat_summary(fun = mean, geom = "bar", position = position_dodge(width = 0.8), alpha = 0.5) +
geom_point(aes(colour = gg_group), position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.8), alpha = 0.5)+
scale_color_manual(values = c("blue", "red", "darkblue", "darkred"))+
scale_fill_manual(values = c("blue", "red", "darkblue", "darkred"))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
ggplot(data = merged_df, aes(x = timepoint, y = `Overall Retention %`, fill = gg_group)) +
stat_summary(fun = mean, geom = "bar", position = position_dodge(width = 0.8), alpha = 0.5) +
geom_point(aes(colour = gg_group), position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.8), alpha = 0.5)+
scale_color_manual(values = c("blue", "red", "darkblue", "darkred"))+
scale_fill_manual(values = c("blue", "red", "darkblue", "darkred"))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
df <- read.csv("Documents/CHUM_git/Microbiota_18/r_console_output/final_track_output.csv", sep = ";") # Load my data
View(df)
df_main <- read.table("Documents/CHUM_git/Microbiota_18/r_console_output/retention stats/main.tsv", sep = "\t") # Load my data
df_rest <- read.table("Documents/CHUM_git/Microbiota_18/r_console_output/retention stats/rest.tsv", sep = "\t") # Load my data
View(df_main)
View(df_rest)
df <- read_excel("Documents/CHUM_git/Microbiota_18/r_console_output/retention stats/microbiota_18_own_retention_stats.xlsx") # Load my data
View(df)
df <- read_excel("Documents/CHUM_git/Microbiota_18/r_console_output/retention stats/microbiota_18_own_retention_stats.xlsx") # Load my data
df$id <- substring(df$Sample, first = 1, last = 5)
df$timepoint <- substring(df$Sample, first = 7, last = length(df$Sample))
merged_df <- merge(df, meta, by = "id") # Merge metadata with chimera metrics data
merged_df$timepoint <- factor(merged_df$timepoint, levels = c("T0","T35","T49","d53","T54","Tfinal"))
merged_df$gg_group <- paste(merged_df$diet, merged_df$treatment, sep = ":")
merged_df$gg_group <- factor(merged_df$gg_group, levels = c("50:water","500:water","50:dss","500:dss"))
merged_df$`Overall Retention %` <- merged_df$nonchim/merged_df$merged*100
ggplot(data = merged_df, aes(x = timepoint, y = `Overall Retention %`, fill = gg_group)) +
stat_summary(fun = mean, geom = "bar", position = position_dodge(width = 0.8), alpha = 0.5) +
geom_point(aes(colour = gg_group), position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.8), alpha = 0.5)+
scale_color_manual(values = c("blue", "red", "darkblue", "darkred"))+
scale_fill_manual(values = c("blue", "red", "darkblue", "darkred"))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
merged_df$`Merged Retention %` < merged_df$merged/merged_df$FilteredF*100
merged_df$`Merged Retention %` <- merged_df$merged/merged_df$FilteredF*100
ggplot(data = merged_df, aes(x = timepoint, y = `Merged Retention %`, fill = gg_group)) +
stat_summary(fun = mean, geom = "bar", position = position_dodge(width = 0.8), alpha = 0.5) +
geom_point(aes(colour = gg_group), position = position_jitterdodge(jitter.width = 0.3, dodge.width = 0.8), alpha = 0.5)+
scale_color_manual(values = c("blue", "red", "darkblue", "darkred"))+
scale_fill_manual(values = c("blue", "red", "darkblue", "darkred"))+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank(),
panel.background = element_blank())
#loading libraries
{
library("tidyverse") #loading bunch of packages
library("ggplot2") #come on, everyone knows what it is used for
library("dplyr") #arranging and manipulating data easily
library("geepack") #library for loading GEE tests
library("lme4") #library for loading ANOVA
library("car") #for anova too
library("ggsignif") #adding significance bars to ggplots
library("Hmisc") #idk lol
library("readxl")
library("esquisse")
}
setwd("~/Documents/CHUM_git/gut-microbiota-iron/")
#loading functions for data manipulation
source("other scripts/dataManipFunctions.R")
# All graphs regarding adult mice colitis experiment
setwd("experiments/finished exp/adults-all-exp/")
# Mice dissection data
dissec_adult <- read_excel("full_groups_metadata.xlsx")
View(dissec_adult)
# Mice dissection data
dissec_adult <- read_excel("dss-groups-metadata.xlsx")
View(dissec_adult)
# Mice dissection data
dissec_adult <- read_excel("dss-groups-dissection.xlsx")
dissec_adult[dissec_adult$treatment == "abx",]
View(dissec_adult[dissec_adult$treatment == "abx",])
View(dissec_adult[dissec_adult$treatment != "abx",])
dissec_adult <- dissec_adult[dissec_adult$treatment != "abx",] # Remove abx mice
View(dissec_adult)
dissec_adult <- dissec_adult[-12,] # Remove dead mouse
dissec_adult[dissec_adult$ID == "36697B",] # For 36697B we are missing liver and spleen measures, replace by 1 and then exlcude if from analysis for spleen and liver measures
dissec_adult[dissec_adult$ID == "36697B", 'liver_weight'] <- 1 # For 36697B we are missing liver and spleen measures, replace by 1 and then exlcude if from analysis for spleen and liver measures
dissec_adult[dissec_adult$ID == "36697B", 'spleen_weight'] <- 1
dissec_adult[dissec_adult$ID == "36697B", '`liver weight`'] <- 1 # For 36697B we are missing liver and spleen measures, replace by 1 and then exlcude if from analysis for spleen and liver measures
dissec_adult[dissec_adult$ID == "36697B", '`spleen weight`'] <- 1
dissec_adult[dissec_adult$ID == "36697B", 'liver weight'] <- 1 # For 36697B we are missing liver and spleen measures, replace by 1 and then exlcude if from analysis for spleen and liver measures
dissec_adult[dissec_adult$ID == "36697B", 'spleen weight'] <- 1
# Mice dissection data
dissec_adult <- read_excel("dss-groups-dissection.xlsx")
dissec_adult <- dissec_adult[dissec_adult$treatment != "abx",] # Remove abx mice
dissec_adult <- dissec_adult[-12,] # Remove dead mouse
dissec_adult[dissec_adult$ID == "36697B", 'liver weight'] <- 1 # For 36697B we are missing liver and spleen measures, replace by 1 and then exlcude if from analysis for spleen and liver measures
dissec_adult[dissec_adult$ID == "36697B", 'spleen weight'] <- 1
dissec_adult <- dissectionDataManipulation(dissec_adult,4)
# Mice dissection data
dissec_adult <- read_excel("dss-groups-dissection.xlsx")
dissec_adult <- dissec_adult[dissec_adult$treatment != "abx",] # Remove abx mice
dissec_adult <- dissec_adult[-12,] # Remove dead mouse
dissec_adult[dissec_adult$ID == "36697B", 'liver weight'] <- 1 # For 36697B we are missing liver and spleen measures, replace by 1 and then exlcude if from analysis for spleen and liver measures
dissec_adult[dissec_adult$ID == "36697B", 'spleen weight'] <- 1
View(dissectionDataManipulation)
dissec_adult$gg_group <- paste(dissec_adult$diet, dissec_adult$treatment, sep = ":")
dissec_adult <- dissectionDataManipulation(dissec_adult, groupInfoCols = 10)
dissec_adult <- dissectionDataManipulation(dissec_adult, groupInfoCols = 9)
# Mice dissection data
dissec_adult <- read_excel("dss-groups-dissection.xlsx")
dissec_adult <- dissec_adult[dissec_adult$treatment != "abx",] # Remove abx mice
dissec_adult <- dissec_adult[-12,] # Remove dead mouse
dissec_adult[dissec_adult$ID == "36697B", 'liver weight'] <- 1 # For 36697B we are missing liver and spleen measures, replace by 1 and then exlcude if from analysis for spleen and liver measures
dissec_adult[dissec_adult$ID == "36697B", 'spleen weight'] <- 1
dissec_adult <- dissectionDataManipulation(dissec_adult, groupInfoCols = 4)
colnames(dissec_adult)[6:9] <- str_replace(colnames(dissec_adult)[6:9], pattern = " ", replacement = "_") # Replace spaces by underscore for variables colnames
dissec_adult <- dissectionDataManipulation(dissec_adult, groupInfoCols = 4)
# Mice dissection data
dissec_adult <- read_excel("dss-groups-dissection.xlsx")
dissec_adult <- dissec_adult[dissec_adult$treatment != "abx",] # Remove abx mice
dissec_adult <- dissec_adult[-12,] # Remove dead mouse
dissec_adult[dissec_adult$ID == "36697B", 'liver weight'] <- 1 # For 36697B we are missing liver and spleen measures, replace by 1 and then exlcude if from analysis for spleen and liver measures
dissec_adult[dissec_adult$ID == "36697B", 'spleen weight'] <- 1
colnames(dissec_adult)[6:9] <- str_replace(colnames(dissec_adult)[6:9], pattern = " ", replacement = "_") # Replace spaces by underscore for variables colnames
dissec_adult <- dissectionDataManipulation(dissec_adult, groupInfoCols = 4)
# Mice dissection data
dissec_adult <- read_excel("dss-groups-dissection.xlsx")
dissec_adult <- dissec_adult[dissec_adult$treatment != "abx",] # Remove abx mice
dissec_adult <- dissec_adult[-12,] # Remove dead mouse
dissec_adult[dissec_adult$ID == "36697B", 'liver weight'] <- 1 # For 36697B we are missing liver and spleen measures, replace by 1 and then exlcude if from analysis for spleen and liver measures
dissec_adult[dissec_adult$ID == "36697B", 'spleen weight'] <- 1
source("~/Documents/CHUM_git/gut-microbiota-iron/other scripts/dataManipFunctions.R")
colnames(dissec_adult)[6:9] <- str_replace(colnames(dissec_adult)[6:9], pattern = " ", replacement = "_") # Replace spaces by underscore for variables colnames
dissec_adult <- dissectionDataManipulation(dissec_adult, groupInfoCols = 4)
source("~/Documents/CHUM_git/gut-microbiota-iron/other scripts/dataManipFunctions.R")
dissec_adult <- dissectionDataManipulation(dissec_adult, groupInfoCols = 4)
source("~/Documents/CHUM_git/gut-microbiota-iron/other scripts/dataManipFunctions.R")
dissec_adult <- dissectionDataManipulation(dissec_adult, groupInfoCols = 4)
# Mice dissection data
dissec_adult <- read_excel("dss-groups-dissection.xlsx")
dissec_adult <- dissec_adult[dissec_adult$treatment != "abx",] # Remove abx mice
dissec_adult <- dissec_adult[-12,] # Remove dead mouse
dissec_adult[dissec_adult$ID == "36697B", 'liver weight'] <- 1 # For 36697B we are missing liver and spleen measures, replace by 1 and then exlcude if from analysis for spleen and liver measures
dissec_adult[dissec_adult$ID == "36697B", 'spleen weight'] <- 1
colnames(dissec_adult)[6:9] <- str_replace(colnames(dissec_adult)[6:9], pattern = " ", replacement = "_") # Replace spaces by underscore for variables colnames
dissec_adult <- dissectionDataManipulation(dissec_adult, groupInfoCols = 4)
source("~/Documents/CHUM_git/gut-microbiota-iron/other scripts/dataManipFunctions.R")
# Mice dissection data
dissec_adult <- read_excel("dss-groups-dissection.xlsx")
dissec_adult <- dissec_adult[dissec_adult$treatment != "abx",] # Remove abx mice
dissec_adult <- dissec_adult[-12,] # Remove dead mouse
dissec_adult[dissec_adult$ID == "36697B", 'liver weight'] <- 1 # For 36697B we are missing liver and spleen measures, replace by 1 and then exlcude if from analysis for spleen and liver measures
dissec_adult[dissec_adult$ID == "36697B", 'spleen weight'] <- 1
colnames(dissec_adult)[6:9] <- str_replace(colnames(dissec_adult)[6:9], pattern = " ", replacement = "_") # Replace spaces by underscore for variables colnames
dissec_adult <- dissectionDataManipulation(dissec_adult, groupInfoCols = 4)
source("~/Documents/CHUM_git/gut-microbiota-iron/other scripts/dataManipFunctions.R")
# Mice dissection data
dissec_adult <- read_excel("dss-groups-dissection.xlsx")
dissec_adult <- dissec_adult[dissec_adult$treatment != "abx",] # Remove abx mice
dissec_adult <- dissec_adult[-12,] # Remove dead mouse
dissec_adult[dissec_adult$ID == "36697B", 'liver weight'] <- 1 # For 36697B we are missing liver and spleen measures, replace by 1 and then exlcude if from analysis for spleen and liver measures
dissec_adult[dissec_adult$ID == "36697B", 'spleen weight'] <- 1
colnames(dissec_adult)[6:9] <- str_replace(colnames(dissec_adult)[6:9], pattern = " ", replacement = "_") # Replace spaces by underscore for variables colnames
dissec_adult <- dissectionDataManipulation(dissec_adult, groupInfoCols = 4)
View(dissec_adult)
dissec_adult$gg_group <- factor(dissec_adult$gg_group, levels = c("50 water","500 water","50 dss","500 dss"))
#boxplot for body weight
adult_dissec_bw <- dissecBoxplot(dissec_adult,"body")
adult_dissec_bw
#boxplot for colon length (non std)
adult_dissec_cln <- dissecBoxplot(dissec_adult,"colon")
adult_dissec_cln
sub_df <- dissec_adult[!dissec_adult$ID== "36697B",] # Sub df removing the mouse for which they were no liver and spleen measures
View(sub_df)
#boxplot for std liver weight
adult_dissec_lvr <- dissecBoxplot(sub_df,"liver")
adult_dissec_lvr
# boxplot for std spleen weight
adult_dissec_spln <- dissecBoxplot(sub_df,"spleen")
adult_dissec_spln
pwd
pwd()
setwd("~/Documents/CHUM_git/gut-microbiota-iron/")
#loading functions for data manipulation
source("other scripts/dataManipFunctions.R")
# All graphs regarding young mice abx experiment
setwd("experiments/ongoing exp/young-abx-exp6/")
# Mice dissection data
dissec_young <- read_excel("dissection.xlsx")
View(dissec_adult)
View(dissec_young)
dissec_young <- dissec_young[-c(17,25:27),] # Remove empty rows
# Mice dissection data
dissec_young <- read_excel("dissection.xlsx")
dissec_young <- dissec_young[-17,] # Remove empty rows
dissec_young <- dissectionDataManipulation(dissec_young,4)
# Mice dissection data
dissec_young <- read_excel("dissection.xlsx")
dissec_young <- dissec_young[-17,] # Remove empty rows
dissec_young <- dissectionDataManipulation(dissec_young,groupInfoCols = 3)
# Mice dissection data
dissec_young <- read_excel("dissection.xlsx")
dissec_young <- dissec_young[-17,] # Remove empty rows
dissec_young <- dissectionDataManipulation(dissec_young,groupInfoCols = 3)
source("~/Documents/CHUM_git/gut-microbiota-iron/other scripts/dataManipFunctions.R")
# Mice dissection data
dissec_young <- read_excel("dissection.xlsx")
dissec_young <- dissec_young[-17,] # Remove empty rows
dissec_young <- dissectionDataManipulation(dissec_young,groupInfoCols = 3)
source("~/Documents/CHUM_git/gut-microbiota-iron/other scripts/dataManipFunctions.R")
colnames9df
colnames(df)
# Mice dissection data
dissec_young <- read_excel("dissection.xlsx")
dissec_young <- dissec_young[-17,] # Remove empty rows
dissec_young <- dissectionDataManipulation(dissec_young,groupInfoCols = 3)
source("~/Documents/CHUM_git/gut-microbiota-iron/other scripts/dataManipFunctions.R")
# Mice dissection data
dissec_young <- read_excel("dissection.xlsx")
dissec_young <- dissec_young[-17,] # Remove empty rows
dissec_young <- dissectionDataManipulation(dissec_young,groupInfoCols = 3)
# Mice dissection data
dissec_young <- read_excel("dissection.xlsx")
dissec_young <- dissec_young[-17,] # Remove empty rows
colnames(dissec_young)[5:8] <- str_replace(colnames(dissec_young)[5:8], pattern = " ", replacement = "_") # Replace spaces by underscore for variables colnames
dissec_young <- dissectionDataManipulation(dissec_young,groupInfoCols = 3)
source("~/Documents/CHUM_git/gut-microbiota-iron/other scripts/dataManipFunctions.R")
# Mice dissection data
dissec_young <- read_excel("dissection.xlsx")
dissec_young <- dissec_young[-17,] # Remove empty rows
colnames(dissec_young)[5:8] <- str_replace(colnames(dissec_young)[5:8], pattern = " ", replacement = "_") # Replace spaces by underscore for variables colnames
dissec_young <- dissectionDataManipulation(dissec_young,groupInfoCols = 3)
View(dissec_young)
dissec_young$gg_group <- factor(dissec_young$gg_group, levels = c("50 water","500 water","50 abx","500 abx"))
#boxplot for body weight
young_dissec_bw <- dissecBoxplot(dissec_young,"body")
# Mice dissection data
dissec_young <- read_excel("dissection.xlsx")
dissec_young <- dissec_young[-17,] # Remove empty rows
colnames(dissec_young)[5:8] <- str_replace(colnames(dissec_young)[5:8], pattern = " ", replacement = "_") # Replace spaces by underscore for variables colnames
dissec_young <- dissectionDataManipulation(dissec_young,groupInfoCols = 3)
dissec_young$gg_group <- factor(dissec_young$gg_group, levels = c("50 water","500 water","50 abx","500 abx"))
#boxplot for body weight
young_dissec_bw <- dissecBoxplot(dissec_young,"body")
